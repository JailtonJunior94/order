services:
  cockroachdb:
    image: cockroachdb/cockroach:v23.2.4
    command: start-single-node --insecure
    restart: always
    ports:
      - "26257:26257"
      - "8080:8080"
    healthcheck:
      test: ["CMD", "cockroach", "node", "status", "--insecure"]
      interval: 30s
      timeout: 10s
      retries: 5
      start_period: 30s
    volumes:
      - ./cockroachdb_data:/cockroach/cockroach-data
    environment:
      COCKROACH_DATABASE: orders
      COCKROACH_USER: root
      COCKROACH_PASSWORD: order@password

  zookeeper:
    image: confluentinc/cp-zookeeper:7.7.1
    environment:
      ZOOKEEPER_CLIENT_PORT: 2181
      ZOOKEEPER_TICK_TIME: 2000

  broker:
    image: confluentinc/cp-kafka:7.7.1
    ports:
      - "9092:9092"
    depends_on:
      - zookeeper
    environment:
      KAFKA_BROKER_ID: 1
      KAFKA_ZOOKEEPER_CONNECT: "zookeeper:2181"
      KAFKA_LISTENER_SECURITY_PROTOCOL_MAP: PLAINTEXT:PLAINTEXT,PLAINTEXT_INTERNAL:PLAINTEXT
      KAFKA_ADVERTISED_LISTENERS: PLAINTEXT://localhost:9092,PLAINTEXT_INTERNAL://broker:29092
      KAFKA_OFFSETS_TOPIC_REPLICATION_FACTOR: 1
      KAFKA_TRANSACTION_STATE_LOG_MIN_ISR: 1
      KAFKA_TRANSACTION_STATE_LOG_REPLICATION_FACTOR: 1

  kafka_ui:
    image: provectuslabs/kafka-ui:v0.7.2
    ports:
      - 8085:8080
    depends_on:
      - zookeeper
      - broker
    environment:
      KAFKA_CLUSTERS_0_NAME: broker
      KAFKA_CLUSTERS_0_BOOTSTRAPSERVERS: broker:29092
      KAFKA_CLUSTERS_0_ZOOKEEPER: zookeeper:2181

  otel_collector:
    image: otel/opentelemetry-collector-contrib:0.82.0
    restart: always
    command:
      - --config=/etc/otelcol-contrib/otel-collector.yml
    volumes:
      - ~/gmp-test-sa-key.json:/etc/otel/key.json
      - ./observability/collector/otel-collector.yml:/etc/otelcol-contrib/otel-collector.yml
    environment:
      - GOOGLE_APPLICATION_CREDENTIALS=/etc/otel/key.json
    ports:
      - "1888:1888" # pprof extension
      - "8888:8888" # Prometheus metrics exposed by the collector
      - "8889:8889" # Prometheus exporter metrics
      - "13133:13133" # health_check extension
      - "4317:4317" # OTLP gRPC receiver
      - "4318:4318" # OTLP http receiver
      - "55679:55679" # zpages extension
      - "55681:55681"
    depends_on:
      - jaeger

  prometheus:
    image: prom/prometheus:v2.51.2
    restart: always
    command:
      - --config.file=/etc/prometheus/prometheus.yml
    volumes:
      - ./observability/prometheus/prometheus.yml:/etc/prometheus/prometheus.yml
    ports:
      - "9090:9090"

  grafana:
    image: grafana/grafana:10.4.2
    volumes:
      - ./observability/grafana/grafana-datasources.yml:/etc/grafana/provisioning/datasources/datasources.yml
    ports:
      - "3000:3000"

  jaeger:
    container_name: orders-jaeger
    image: jaegertracing/all-in-one:1
    ports:
      - "16686:16686"
      - "14250:14250"

  order_migration:
    build:
      context: ..
      dockerfile: deployment/Dockerfile
    command: migrate
    environment:
      - DB_DRIVER=postgres
      - DB_HOST=cockroachdb
      - DB_PORT=26257
      - DB_USER=root
      - DB_PASSWORD=order@password
      - DB_NAME=orders
      - DB_MAX_IDLE_CONNS=10
      - MIGRATE_PATH=file://migrations/order
    depends_on:
      - cockroachdb

volumes:
  cockroachdb_data:
